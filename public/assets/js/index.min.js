document['addEventListener']('DOMContentLoaded',()=>{const n={'generateBtn':document['getElementById']('generateBtn'),'uploadBtn':document['getElementById']('uploadBtn'),'fileInput':document['getElementById']('file'),'passwordInput':document['getElementById']('password'),'progressBar':document['getElementById']('progressBar'),'status':document['getElementById']('status'),'toggleBtn':document['getElementById']('togglePassword'),'copyBtn':document['getElementById']('copyPassword'),'fileCount':document['getElementById']('fileCount'),'storageUsed':document['getElementById']('storageUsed'),'nodeRamUsage':document['getElementById']('nodeRamUsage'),'clearTimer':document['getElementById']('clearTimer'),'strength':document['getElementById']('strength'),'resultBox':document['getElementById']('resultBox'),'resultWrapper':document['getElementById']('resultWrapper'),'copyResult':document['getElementById']('copyResult')},r='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()-_=+[]{}|;:\x27,.<>/?`~';n['generateBtn']['addEventListener']('click',()=>{const s=parseInt(n['strength']['value']);n['passwordInput']['value']=Array['from']({'length':s},()=>r[Math['floor'](Math['random']()*r['length'])])['join']('');}),n['toggleBtn']['addEventListener']('click',()=>{const s=n['passwordInput']['type']==='password';n['passwordInput']['type']=s?'text':'password',n['toggleBtn']['querySelector']('img')['src']='/assets/icons/eye.png';}),n['copyBtn']['addEventListener']('click',async()=>{try{await navigator['clipboard']['writeText'](n['passwordInput']['value']);const s=n['copyBtn']['querySelector']('img');s['src']='/assets/icons/success.png',setTimeout(()=>s['src']='/assets/icons/copy.png',0x5dc);}catch{n['copyBtn']['querySelector']('img')['src']='/assets/icons/error.png';}}),n['copyResult']['addEventListener']('click',async()=>{try{await navigator['clipboard']['writeText'](n['resultBox']['value']),n['copyResult']['querySelector']('img')['src']='/assets/icons/success.png',setTimeout(()=>n['copyResult']['querySelector']('img')['src']='/assets/icons/copy.png',0x5dc);}catch{n['copyResult']['querySelector']('img')['src']='/assets/icons/error.png';}});async function T(){const {files:s}=n['fileInput'],e=n['passwordInput']['value'];n['resultWrapper']['style']['display']='none',n['resultBox']['value']='';if(!s['length'])return alert('Please\x20select\x20a\x20file.');if(!e)return alert('Please\x20enter\x20or\x20generate\x20a\x20password.');const Z=s[0x0];if(Z['size']>0x64*0x400*0x400){f(0x0,'‚ùå\x20File\x20too\x20large\x20(max.\x20100MB).');return;}f(0x5,'üîê\x20Encrypting\x20file...');try{const K=new TextEncoder()['encode'](e),v=await crypto['subtle']['digest']('SHA-512',K),b=l(v),D=await crypto['subtle']['importKey']('raw',v['slice'](0x0,0x20),{'name':'AES-GCM'},![],['encrypt']),V=crypto['getRandomValues'](new Uint8Array(0xc)),L=await Z['arrayBuffer'](),C=await crypto['subtle']['encrypt']({'name':'AES-GCM','iv':V},D,L),d=new Blob([V,new Uint8Array(C)]),q=new FormData();q['append']('file',d,Z['name']),q['append']('passwordhash',b),q['append']('encrypted','true');const k=new XMLHttpRequest();k['open']('POST','/upload',!![]);const y=Date['now']();k['upload']['addEventListener']('progress',H=>{if(H['lengthComputable']){const R=Math['round'](H['loaded']/H['total']*0x64),W=(Date['now']()-y)/0x3e8,c=H['loaded']/(0x400*0x400)/W;f(R,'‚¨ÜÔ∏è\x20Uploading...\x20'+R+'%\x20('+c['toFixed'](0x2)+'\x20MB/s)');}}),k['onload']=()=>{if(k['status']===0xc8){const {link:H}=JSON['parse'](k['responseText']);F(H),f(0x64,'‚úÖ\x20Upload\x20successful.');}else{const {error:R}=JSON['parse'](k['responseText']);f(0x0,'‚ùå\x20'+(R||'Upload\x20failed.'));}},k['onerror']=()=>{f(0x0,'‚ùå\x20Upload\x20failed\x20(network\x20error).');},k['send'](q);}catch(H){console['error']('Upload\x20error:',H),f(0x0,'‚ùå\x20'+(H['message']||'Upload\x20failed.'));}}function F(s){const e=''+location['origin']+s;n['resultBox']['value']=e,n['resultWrapper']['style']['display']='flex';}function f(s,e){n['progressBar']['style']['width']=s+'%',n['status']['innerHTML']=e;}function l(s){return btoa(String['fromCharCode'](...new Uint8Array(s)));}async function i(){try{const s=await fetch('/api/stats'),e=await s['json']();n['fileCount']['textContent']=e['files'],n['storageUsed']['textContent']=(+e['storageUsed'])['toFixed'](0x2)+'\x20MB',n['nodeRamUsage']['textContent']=(+e['nodeRam'])['toFixed'](0x2)+'\x20MB',M(e['clearAt']);}catch(Z){console['error']('Failed\x20to\x20fetch\x20server\x20stats:',Z);}}function M(s){const e=Math['max'](0x0,s-Date['now']()),Z=Math['floor'](e/(0x3e8*0x3c*0x3c*0x18)),K=Math['floor'](e/(0x3e8*0x3c*0x3c))%0x18,v=Math['floor'](e/(0x3e8*0x3c))%0x3c;n['clearTimer']['textContent']=Z+'d\x20'+K+'h\x20'+v+'m';}n['uploadBtn']['addEventListener']('click',T),i(),setInterval(i,0x1388);});